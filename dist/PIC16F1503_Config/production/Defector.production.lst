

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Aug 01 22:40:41 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000E                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  008C                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0097                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010E                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0113                     	;# 
    73  0114                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0117                     	;# 
    77  0118                     	;# 
    78  0119                     	;# 
    79  011D                     	;# 
    80  018C                     	;# 
    81  018E                     	;# 
    82  0191                     	;# 
    83  0191                     	;# 
    84  0192                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0194                     	;# 
    88  0195                     	;# 
    89  0196                     	;# 
    90  0197                     	;# 
    91  020C                     	;# 
    92  0211                     	;# 
    93  0211                     	;# 
    94  0212                     	;# 
    95  0212                     	;# 
    96  0213                     	;# 
    97  0213                     	;# 
    98  0214                     	;# 
    99  0214                     	;# 
   100  0215                     	;# 
   101  0215                     	;# 
   102  0215                     	;# 
   103  0216                     	;# 
   104  0216                     	;# 
   105  0217                     	;# 
   106  0217                     	;# 
   107  0391                     	;# 
   108  0392                     	;# 
   109  0393                     	;# 
   110  0498                     	;# 
   111  0498                     	;# 
   112  0499                     	;# 
   113  049A                     	;# 
   114  049B                     	;# 
   115  049B                     	;# 
   116  049C                     	;# 
   117  049D                     	;# 
   118  049E                     	;# 
   119  049F                     	;# 
   120  0611                     	;# 
   121  0612                     	;# 
   122  0613                     	;# 
   123  0613                     	;# 
   124  0614                     	;# 
   125  0615                     	;# 
   126  0616                     	;# 
   127  0616                     	;# 
   128  0617                     	;# 
   129  0618                     	;# 
   130  0619                     	;# 
   131  0619                     	;# 
   132  061A                     	;# 
   133  061B                     	;# 
   134  061C                     	;# 
   135  061C                     	;# 
   136  0691                     	;# 
   137  0692                     	;# 
   138  0693                     	;# 
   139  0694                     	;# 
   140  0695                     	;# 
   141  0F0F                     	;# 
   142  0F10                     	;# 
   143  0F11                     	;# 
   144  0F12                     	;# 
   145  0F13                     	;# 
   146  0F14                     	;# 
   147  0F15                     	;# 
   148  0F16                     	;# 
   149  0F17                     	;# 
   150  0F18                     	;# 
   151  0F19                     	;# 
   152  0F1A                     	;# 
   153  0F1B                     	;# 
   154  0F1C                     	;# 
   155  0F1D                     	;# 
   156  0F1E                     	;# 
   157  0F1F                     	;# 
   158  0FE3                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000E                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  008C                     	;# 
   197  008E                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  010C                     	;# 
   213  010E                     	;# 
   214  0111                     	;# 
   215  0112                     	;# 
   216  0113                     	;# 
   217  0114                     	;# 
   218  0115                     	;# 
   219  0116                     	;# 
   220  0117                     	;# 
   221  0118                     	;# 
   222  0119                     	;# 
   223  011D                     	;# 
   224  018C                     	;# 
   225  018E                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  020C                     	;# 
   236  0211                     	;# 
   237  0211                     	;# 
   238  0212                     	;# 
   239  0212                     	;# 
   240  0213                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0214                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0216                     	;# 
   248  0216                     	;# 
   249  0217                     	;# 
   250  0217                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  0393                     	;# 
   254  0498                     	;# 
   255  0498                     	;# 
   256  0499                     	;# 
   257  049A                     	;# 
   258  049B                     	;# 
   259  049B                     	;# 
   260  049C                     	;# 
   261  049D                     	;# 
   262  049E                     	;# 
   263  049F                     	;# 
   264  0611                     	;# 
   265  0612                     	;# 
   266  0613                     	;# 
   267  0613                     	;# 
   268  0614                     	;# 
   269  0615                     	;# 
   270  0616                     	;# 
   271  0616                     	;# 
   272  0617                     	;# 
   273  0618                     	;# 
   274  0619                     	;# 
   275  0619                     	;# 
   276  061A                     	;# 
   277  061B                     	;# 
   278  061C                     	;# 
   279  061C                     	;# 
   280  0691                     	;# 
   281  0692                     	;# 
   282  0693                     	;# 
   283  0694                     	;# 
   284  0695                     	;# 
   285  0F0F                     	;# 
   286  0F10                     	;# 
   287  0F11                     	;# 
   288  0F12                     	;# 
   289  0F13                     	;# 
   290  0F14                     	;# 
   291  0F15                     	;# 
   292  0F16                     	;# 
   293  0F17                     	;# 
   294  0F18                     	;# 
   295  0F19                     	;# 
   296  0F1A                     	;# 
   297  0F1B                     	;# 
   298  0F1C                     	;# 
   299  0F1D                     	;# 
   300  0F1E                     	;# 
   301  0F1F                     	;# 
   302  0FE3                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000E                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  008C                     	;# 
   341  008E                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  010C                     	;# 
   357  010E                     	;# 
   358  0111                     	;# 
   359  0112                     	;# 
   360  0113                     	;# 
   361  0114                     	;# 
   362  0115                     	;# 
   363  0116                     	;# 
   364  0117                     	;# 
   365  0118                     	;# 
   366  0119                     	;# 
   367  011D                     	;# 
   368  018C                     	;# 
   369  018E                     	;# 
   370  0191                     	;# 
   371  0191                     	;# 
   372  0192                     	;# 
   373  0193                     	;# 
   374  0193                     	;# 
   375  0194                     	;# 
   376  0195                     	;# 
   377  0196                     	;# 
   378  0197                     	;# 
   379  020C                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0391                     	;# 
   396  0392                     	;# 
   397  0393                     	;# 
   398  0498                     	;# 
   399  0498                     	;# 
   400  0499                     	;# 
   401  049A                     	;# 
   402  049B                     	;# 
   403  049B                     	;# 
   404  049C                     	;# 
   405  049D                     	;# 
   406  049E                     	;# 
   407  049F                     	;# 
   408  0611                     	;# 
   409  0612                     	;# 
   410  0613                     	;# 
   411  0613                     	;# 
   412  0614                     	;# 
   413  0615                     	;# 
   414  0616                     	;# 
   415  0616                     	;# 
   416  0617                     	;# 
   417  0618                     	;# 
   418  0619                     	;# 
   419  0619                     	;# 
   420  061A                     	;# 
   421  061B                     	;# 
   422  061C                     	;# 
   423  061C                     	;# 
   424  0691                     	;# 
   425  0692                     	;# 
   426  0693                     	;# 
   427  0694                     	;# 
   428  0695                     	;# 
   429  0F0F                     	;# 
   430  0F10                     	;# 
   431  0F11                     	;# 
   432  0F12                     	;# 
   433  0F13                     	;# 
   434  0F14                     	;# 
   435  0F15                     	;# 
   436  0F16                     	;# 
   437  0F17                     	;# 
   438  0F18                     	;# 
   439  0F19                     	;# 
   440  0F1A                     	;# 
   441  0F1B                     	;# 
   442  0F1C                     	;# 
   443  0F1D                     	;# 
   444  0F1E                     	;# 
   445  0F1F                     	;# 
   446  0FE3                     	;# 
   447  0FE4                     	;# 
   448  0FE5                     	;# 
   449  0FE6                     	;# 
   450  0FE7                     	;# 
   451  0FE8                     	;# 
   452  0FE9                     	;# 
   453  0FEA                     	;# 
   454  0FEB                     	;# 
   455  0FED                     	;# 
   456  0FEE                     	;# 
   457  0FEF                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  008C                     	;# 
   485  008E                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0095                     	;# 
   490  0096                     	;# 
   491  0097                     	;# 
   492  0099                     	;# 
   493  009A                     	;# 
   494  009B                     	;# 
   495  009B                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010E                     	;# 
   502  0111                     	;# 
   503  0112                     	;# 
   504  0113                     	;# 
   505  0114                     	;# 
   506  0115                     	;# 
   507  0116                     	;# 
   508  0117                     	;# 
   509  0118                     	;# 
   510  0119                     	;# 
   511  011D                     	;# 
   512  018C                     	;# 
   513  018E                     	;# 
   514  0191                     	;# 
   515  0191                     	;# 
   516  0192                     	;# 
   517  0193                     	;# 
   518  0193                     	;# 
   519  0194                     	;# 
   520  0195                     	;# 
   521  0196                     	;# 
   522  0197                     	;# 
   523  020C                     	;# 
   524  0211                     	;# 
   525  0211                     	;# 
   526  0212                     	;# 
   527  0212                     	;# 
   528  0213                     	;# 
   529  0213                     	;# 
   530  0214                     	;# 
   531  0214                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0216                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0217                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  0498                     	;# 
   543  0498                     	;# 
   544  0499                     	;# 
   545  049A                     	;# 
   546  049B                     	;# 
   547  049B                     	;# 
   548  049C                     	;# 
   549  049D                     	;# 
   550  049E                     	;# 
   551  049F                     	;# 
   552  0611                     	;# 
   553  0612                     	;# 
   554  0613                     	;# 
   555  0613                     	;# 
   556  0614                     	;# 
   557  0615                     	;# 
   558  0616                     	;# 
   559  0616                     	;# 
   560  0617                     	;# 
   561  0618                     	;# 
   562  0619                     	;# 
   563  0619                     	;# 
   564  061A                     	;# 
   565  061B                     	;# 
   566  061C                     	;# 
   567  061C                     	;# 
   568  0691                     	;# 
   569  0692                     	;# 
   570  0693                     	;# 
   571  0694                     	;# 
   572  0695                     	;# 
   573  0F0F                     	;# 
   574  0F10                     	;# 
   575  0F11                     	;# 
   576  0F12                     	;# 
   577  0F13                     	;# 
   578  0F14                     	;# 
   579  0F15                     	;# 
   580  0F16                     	;# 
   581  0F17                     	;# 
   582  0F18                     	;# 
   583  0F19                     	;# 
   584  0F1A                     	;# 
   585  0F1B                     	;# 
   586  0F1C                     	;# 
   587  0F1D                     	;# 
   588  0F1E                     	;# 
   589  0F1F                     	;# 
   590  0FE3                     	;# 
   591  0FE4                     	;# 
   592  0FE5                     	;# 
   593  0FE6                     	;# 
   594  0FE7                     	;# 
   595  0FE8                     	;# 
   596  0FE9                     	;# 
   597  0FEA                     	;# 
   598  0FEB                     	;# 
   599  0FED                     	;# 
   600  0FEE                     	;# 
   601  0FEF                     	;# 
   602  0000                     	;# 
   603  0001                     	;# 
   604  0002                     	;# 
   605  0003                     	;# 
   606  0004                     	;# 
   607  0005                     	;# 
   608  0006                     	;# 
   609  0007                     	;# 
   610  0008                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  000E                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0013                     	;# 
   619  0015                     	;# 
   620  0016                     	;# 
   621  0016                     	;# 
   622  0017                     	;# 
   623  0018                     	;# 
   624  0019                     	;# 
   625  001A                     	;# 
   626  001B                     	;# 
   627  001C                     	;# 
   628  008C                     	;# 
   629  008E                     	;# 
   630  0091                     	;# 
   631  0092                     	;# 
   632  0093                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0097                     	;# 
   636  0099                     	;# 
   637  009A                     	;# 
   638  009B                     	;# 
   639  009B                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009E                     	;# 
   643  009F                     	;# 
   644  010C                     	;# 
   645  010E                     	;# 
   646  0111                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0115                     	;# 
   651  0116                     	;# 
   652  0117                     	;# 
   653  0118                     	;# 
   654  0119                     	;# 
   655  011D                     	;# 
   656  018C                     	;# 
   657  018E                     	;# 
   658  0191                     	;# 
   659  0191                     	;# 
   660  0192                     	;# 
   661  0193                     	;# 
   662  0193                     	;# 
   663  0194                     	;# 
   664  0195                     	;# 
   665  0196                     	;# 
   666  0197                     	;# 
   667  020C                     	;# 
   668  0211                     	;# 
   669  0211                     	;# 
   670  0212                     	;# 
   671  0212                     	;# 
   672  0213                     	;# 
   673  0213                     	;# 
   674  0214                     	;# 
   675  0214                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0216                     	;# 
   680  0216                     	;# 
   681  0217                     	;# 
   682  0217                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  0498                     	;# 
   687  0498                     	;# 
   688  0499                     	;# 
   689  049A                     	;# 
   690  049B                     	;# 
   691  049B                     	;# 
   692  049C                     	;# 
   693  049D                     	;# 
   694  049E                     	;# 
   695  049F                     	;# 
   696  0611                     	;# 
   697  0612                     	;# 
   698  0613                     	;# 
   699  0613                     	;# 
   700  0614                     	;# 
   701  0615                     	;# 
   702  0616                     	;# 
   703  0616                     	;# 
   704  0617                     	;# 
   705  0618                     	;# 
   706  0619                     	;# 
   707  0619                     	;# 
   708  061A                     	;# 
   709  061B                     	;# 
   710  061C                     	;# 
   711  061C                     	;# 
   712  0691                     	;# 
   713  0692                     	;# 
   714  0693                     	;# 
   715  0694                     	;# 
   716  0695                     	;# 
   717  0F0F                     	;# 
   718  0F10                     	;# 
   719  0F11                     	;# 
   720  0F12                     	;# 
   721  0F13                     	;# 
   722  0F14                     	;# 
   723  0F15                     	;# 
   724  0F16                     	;# 
   725  0F17                     	;# 
   726  0F18                     	;# 
   727  0F19                     	;# 
   728  0F1A                     	;# 
   729  0F1B                     	;# 
   730  0F1C                     	;# 
   731  0F1D                     	;# 
   732  0F1E                     	;# 
   733  0F1F                     	;# 
   734  0FE3                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEB                     	;# 
   743  0FED                     	;# 
   744  0FEE                     	;# 
   745  0FEF                     	;# 
   746  0000                     	;# 
   747  0001                     	;# 
   748  0002                     	;# 
   749  0003                     	;# 
   750  0004                     	;# 
   751  0005                     	;# 
   752  0006                     	;# 
   753  0007                     	;# 
   754  0008                     	;# 
   755  0009                     	;# 
   756  000A                     	;# 
   757  000B                     	;# 
   758  000C                     	;# 
   759  000E                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0015                     	;# 
   764  0016                     	;# 
   765  0016                     	;# 
   766  0017                     	;# 
   767  0018                     	;# 
   768  0019                     	;# 
   769  001A                     	;# 
   770  001B                     	;# 
   771  001C                     	;# 
   772  008C                     	;# 
   773  008E                     	;# 
   774  0091                     	;# 
   775  0092                     	;# 
   776  0093                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0099                     	;# 
   781  009A                     	;# 
   782  009B                     	;# 
   783  009B                     	;# 
   784  009C                     	;# 
   785  009D                     	;# 
   786  009E                     	;# 
   787  009F                     	;# 
   788  010C                     	;# 
   789  010E                     	;# 
   790  0111                     	;# 
   791  0112                     	;# 
   792  0113                     	;# 
   793  0114                     	;# 
   794  0115                     	;# 
   795  0116                     	;# 
   796  0117                     	;# 
   797  0118                     	;# 
   798  0119                     	;# 
   799  011D                     	;# 
   800  018C                     	;# 
   801  018E                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  020C                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  0391                     	;# 
   828  0392                     	;# 
   829  0393                     	;# 
   830  0498                     	;# 
   831  0498                     	;# 
   832  0499                     	;# 
   833  049A                     	;# 
   834  049B                     	;# 
   835  049B                     	;# 
   836  049C                     	;# 
   837  049D                     	;# 
   838  049E                     	;# 
   839  049F                     	;# 
   840  0611                     	;# 
   841  0612                     	;# 
   842  0613                     	;# 
   843  0613                     	;# 
   844  0614                     	;# 
   845  0615                     	;# 
   846  0616                     	;# 
   847  0616                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061C                     	;# 
   856  0691                     	;# 
   857  0692                     	;# 
   858  0693                     	;# 
   859  0694                     	;# 
   860  0695                     	;# 
   861  0F0F                     	;# 
   862  0F10                     	;# 
   863  0F11                     	;# 
   864  0F12                     	;# 
   865  0F13                     	;# 
   866  0F14                     	;# 
   867  0F15                     	;# 
   868  0F16                     	;# 
   869  0F17                     	;# 
   870  0F18                     	;# 
   871  0F19                     	;# 
   872  0F1A                     	;# 
   873  0F1B                     	;# 
   874  0F1C                     	;# 
   875  0F1D                     	;# 
   876  0F1E                     	;# 
   877  0F1F                     	;# 
   878  0FE3                     	;# 
   879  0FE4                     	;# 
   880  0FE5                     	;# 
   881  0FE6                     	;# 
   882  0FE7                     	;# 
   883  0FE8                     	;# 
   884  0FE9                     	;# 
   885  0FEA                     	;# 
   886  0FEB                     	;# 
   887  0FED                     	;# 
   888  0FEE                     	;# 
   889  0FEF                     	;# 
   890  0000                     	;# 
   891  0001                     	;# 
   892  0002                     	;# 
   893  0003                     	;# 
   894  0004                     	;# 
   895  0005                     	;# 
   896  0006                     	;# 
   897  0007                     	;# 
   898  0008                     	;# 
   899  0009                     	;# 
   900  000A                     	;# 
   901  000B                     	;# 
   902  000C                     	;# 
   903  000E                     	;# 
   904  0011                     	;# 
   905  0012                     	;# 
   906  0013                     	;# 
   907  0015                     	;# 
   908  0016                     	;# 
   909  0016                     	;# 
   910  0017                     	;# 
   911  0018                     	;# 
   912  0019                     	;# 
   913  001A                     	;# 
   914  001B                     	;# 
   915  001C                     	;# 
   916  008C                     	;# 
   917  008E                     	;# 
   918  0091                     	;# 
   919  0092                     	;# 
   920  0093                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  010C                     	;# 
   933  010E                     	;# 
   934  0111                     	;# 
   935  0112                     	;# 
   936  0113                     	;# 
   937  0114                     	;# 
   938  0115                     	;# 
   939  0116                     	;# 
   940  0117                     	;# 
   941  0118                     	;# 
   942  0119                     	;# 
   943  011D                     	;# 
   944  018C                     	;# 
   945  018E                     	;# 
   946  0191                     	;# 
   947  0191                     	;# 
   948  0192                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0194                     	;# 
   952  0195                     	;# 
   953  0196                     	;# 
   954  0197                     	;# 
   955  020C                     	;# 
   956  0211                     	;# 
   957  0211                     	;# 
   958  0212                     	;# 
   959  0212                     	;# 
   960  0213                     	;# 
   961  0213                     	;# 
   962  0214                     	;# 
   963  0214                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0216                     	;# 
   968  0216                     	;# 
   969  0217                     	;# 
   970  0217                     	;# 
   971  0391                     	;# 
   972  0392                     	;# 
   973  0393                     	;# 
   974  0498                     	;# 
   975  0498                     	;# 
   976  0499                     	;# 
   977  049A                     	;# 
   978  049B                     	;# 
   979  049B                     	;# 
   980  049C                     	;# 
   981  049D                     	;# 
   982  049E                     	;# 
   983  049F                     	;# 
   984  0611                     	;# 
   985  0612                     	;# 
   986  0613                     	;# 
   987  0613                     	;# 
   988  0614                     	;# 
   989  0615                     	;# 
   990  0616                     	;# 
   991  0616                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  0619                     	;# 
   996  061A                     	;# 
   997  061B                     	;# 
   998  061C                     	;# 
   999  061C                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  0695                     	;# 
  1005  0F0F                     	;# 
  1006  0F10                     	;# 
  1007  0F11                     	;# 
  1008  0F12                     	;# 
  1009  0F13                     	;# 
  1010  0F14                     	;# 
  1011  0F15                     	;# 
  1012  0F16                     	;# 
  1013  0F17                     	;# 
  1014  0F18                     	;# 
  1015  0F19                     	;# 
  1016  0F1A                     	;# 
  1017  0F1B                     	;# 
  1018  0F1C                     	;# 
  1019  0F1D                     	;# 
  1020  0F1E                     	;# 
  1021  0F1F                     	;# 
  1022  0FE3                     	;# 
  1023  0FE4                     	;# 
  1024  0FE5                     	;# 
  1025  0FE6                     	;# 
  1026  0FE7                     	;# 
  1027  0FE8                     	;# 
  1028  0FE9                     	;# 
  1029  0FEA                     	;# 
  1030  0FEB                     	;# 
  1031  0FED                     	;# 
  1032  0FEE                     	;# 
  1033  0FEF                     	;# 
  1034  0000                     	;# 
  1035  0001                     	;# 
  1036  0002                     	;# 
  1037  0003                     	;# 
  1038  0004                     	;# 
  1039  0005                     	;# 
  1040  0006                     	;# 
  1041  0007                     	;# 
  1042  0008                     	;# 
  1043  0009                     	;# 
  1044  000A                     	;# 
  1045  000B                     	;# 
  1046  000C                     	;# 
  1047  000E                     	;# 
  1048  0011                     	;# 
  1049  0012                     	;# 
  1050  0013                     	;# 
  1051  0015                     	;# 
  1052  0016                     	;# 
  1053  0016                     	;# 
  1054  0017                     	;# 
  1055  0018                     	;# 
  1056  0019                     	;# 
  1057  001A                     	;# 
  1058  001B                     	;# 
  1059  001C                     	;# 
  1060  008C                     	;# 
  1061  008E                     	;# 
  1062  0091                     	;# 
  1063  0092                     	;# 
  1064  0093                     	;# 
  1065  0095                     	;# 
  1066  0096                     	;# 
  1067  0097                     	;# 
  1068  0099                     	;# 
  1069  009A                     	;# 
  1070  009B                     	;# 
  1071  009B                     	;# 
  1072  009C                     	;# 
  1073  009D                     	;# 
  1074  009E                     	;# 
  1075  009F                     	;# 
  1076  010C                     	;# 
  1077  010E                     	;# 
  1078  0111                     	;# 
  1079  0112                     	;# 
  1080  0113                     	;# 
  1081  0114                     	;# 
  1082  0115                     	;# 
  1083  0116                     	;# 
  1084  0117                     	;# 
  1085  0118                     	;# 
  1086  0119                     	;# 
  1087  011D                     	;# 
  1088  018C                     	;# 
  1089  018E                     	;# 
  1090  0191                     	;# 
  1091  0191                     	;# 
  1092  0192                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0194                     	;# 
  1096  0195                     	;# 
  1097  0196                     	;# 
  1098  0197                     	;# 
  1099  020C                     	;# 
  1100  0211                     	;# 
  1101  0211                     	;# 
  1102  0212                     	;# 
  1103  0212                     	;# 
  1104  0213                     	;# 
  1105  0213                     	;# 
  1106  0214                     	;# 
  1107  0214                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0216                     	;# 
  1112  0216                     	;# 
  1113  0217                     	;# 
  1114  0217                     	;# 
  1115  0391                     	;# 
  1116  0392                     	;# 
  1117  0393                     	;# 
  1118  0498                     	;# 
  1119  0498                     	;# 
  1120  0499                     	;# 
  1121  049A                     	;# 
  1122  049B                     	;# 
  1123  049B                     	;# 
  1124  049C                     	;# 
  1125  049D                     	;# 
  1126  049E                     	;# 
  1127  049F                     	;# 
  1128  0611                     	;# 
  1129  0612                     	;# 
  1130  0613                     	;# 
  1131  0613                     	;# 
  1132  0614                     	;# 
  1133  0615                     	;# 
  1134  0616                     	;# 
  1135  0616                     	;# 
  1136  0617                     	;# 
  1137  0618                     	;# 
  1138  0619                     	;# 
  1139  0619                     	;# 
  1140  061A                     	;# 
  1141  061B                     	;# 
  1142  061C                     	;# 
  1143  061C                     	;# 
  1144  0691                     	;# 
  1145  0692                     	;# 
  1146  0693                     	;# 
  1147  0694                     	;# 
  1148  0695                     	;# 
  1149  0F0F                     	;# 
  1150  0F10                     	;# 
  1151  0F11                     	;# 
  1152  0F12                     	;# 
  1153  0F13                     	;# 
  1154  0F14                     	;# 
  1155  0F15                     	;# 
  1156  0F16                     	;# 
  1157  0F17                     	;# 
  1158  0F18                     	;# 
  1159  0F19                     	;# 
  1160  0F1A                     	;# 
  1161  0F1B                     	;# 
  1162  0F1C                     	;# 
  1163  0F1D                     	;# 
  1164  0F1E                     	;# 
  1165  0F1F                     	;# 
  1166  0FE3                     	;# 
  1167  0FE4                     	;# 
  1168  0FE5                     	;# 
  1169  0FE6                     	;# 
  1170  0FE7                     	;# 
  1171  0FE8                     	;# 
  1172  0FE9                     	;# 
  1173  0FEA                     	;# 
  1174  0FEB                     	;# 
  1175  0FED                     	;# 
  1176  0FEE                     	;# 
  1177  0FEF                     	;# 
  1178                           
  1179                           	psect	idataCOMMON
  1180  01C7                     __pidataCOMMON:	
  1181                           
  1182                           ;initializer for _debounce_limit
  1183  01C7  3419               	retlw	25
  1184  01C8  3400               	retlw	0
  1185                           
  1186                           	psect	idataBANK0
  1187  01B6                     __pidataBANK0:	
  1188                           
  1189                           ;initializer for _boost_up
  1190  01B6  3401               	retlw	1
  1191  01B7  3400               	retlw	0
  1192                           
  1193                           ;initializer for _fuzz_up
  1194  01B8  3401               	retlw	1
  1195  01B9  3400               	retlw	0
  1196                           
  1197                           ;initializer for _long_press_limit
  1198  01BA  3400               	retlw	0
  1199  01BB  342D               	retlw	45
  1200  000B                     _INTCONbits	set	11
  1201  0011                     _PIR1bits	set	17
  1202  000C                     _PORTAbits	set	12
  1203  001C                     _T2CONbits	set	28
  1204  009D                     _ADCON0bits	set	157
  1205  009E                     _ADCON1bits	set	158
  1206  009C                     _ADRESH	set	156
  1207  009B                     _ADRESL	set	155
  1208  0099                     _OSCCONbits	set	153
  1209  009A                     _OSCSTAT	set	154
  1210  008C                     _TRISAbits	set	140
  1211  008E                     _TRISCbits	set	142
  1212  010C                     _LATAbits	set	268
  1213  010E                     _LATCbits	set	270
  1214  018C                     _ANSELAbits	set	396
  1215  0192                     _PMADRH	set	402
  1216  0191                     _PMADRL	set	401
  1217  0195                     _PMCON1bits	set	405
  1218  0196                     _PMCON2	set	406
  1219  0194                     _PMDATH	set	404
  1220  0193                     _PMDATL	set	403
  1221                           
  1222                           ; #config settings
  1223  0000                     
  1224                           	psect	cinit
  1225  000E                     start_initialization:	
  1226  000E                     __initialization:	
  1227                           
  1228                           ; Clear objects allocated to COMMON
  1229  000E  01F7               	clrf	__pbssCOMMON& (0+127)
  1230  000F  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1231  0010  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1232  0011  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1233                           
  1234                           ; Clear objects allocated to BANK0
  1235  0012  3020               	movlw	low __pbssBANK0
  1236  0013  0084               	movwf	4
  1237  0014  3000               	movlw	high __pbssBANK0
  1238  0015  0085               	movwf	5
  1239  0016  3014               	movlw	20
  1240  0017  21BC               	fcall	clear_ram0
  1241                           
  1242                           ; Initialize objects allocated to COMMON
  1243  0018  21C7               	fcall	__pidataCOMMON	;fetch initializer
  1244  0019  00FB               	movwf	__pdataCOMMON& (0+127)
  1245  001A  21C8               	fcall	__pidataCOMMON+1	;fetch initializer
  1246  001B  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
  1247                           
  1248                           ; Initialize objects allocated to BANK0
  1249  001C  30B6               	movlw	low __pidataBANK0
  1250  001D  0084               	movwf	4
  1251  001E  3081               	movlw	(high __pidataBANK0)| (0+128)
  1252  001F  0085               	movwf	5
  1253  0020  0012               	moviw fsr0++
  1254  0021  00B4               	movwf	__pdataBANK0& (0+127)
  1255  0022  0012               	moviw fsr0++
  1256  0023  00B5               	movwf	(__pdataBANK0+1)& (0+127)
  1257  0024  0012               	moviw fsr0++
  1258  0025  00B6               	movwf	(__pdataBANK0+2)& (0+127)
  1259  0026  0012               	moviw fsr0++
  1260  0027  00B7               	movwf	(__pdataBANK0+3)& (0+127)
  1261  0028  0012               	moviw fsr0++
  1262  0029  00B8               	movwf	(__pdataBANK0+4)& (0+127)
  1263  002A  0012               	moviw fsr0++
  1264  002B  00B9               	movwf	(__pdataBANK0+5)& (0+127)
  1265  002C                     end_of_initialization:	
  1266                           ;End of C runtime variable initialization code
  1267                           
  1268  002C                     __end_of__initialization:	
  1269  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1270  002D  0020               	movlb	0
  1271  002E  2986               	ljmp	_main	;jump to C main() function
  1272                           
  1273                           	psect	bssCOMMON
  1274  0077                     __pbssCOMMON:	
  1275  0077                     _boost_pressed:	
  1276  0077                     	ds	2
  1277  0079                     _fuzz_pressed:	
  1278  0079                     	ds	2
  1279                           
  1280                           	psect	dataCOMMON
  1281  007B                     __pdataCOMMON:	
  1282  007B                     _debounce_limit:	
  1283  007B                     	ds	2
  1284                           
  1285                           	psect	bssBANK0
  1286  0020                     __pbssBANK0:	
  1287  0020                     wait_ms@timel:	
  1288  0020                     	ds	4
  1289  0024                     _boost_down:	
  1290  0024                     	ds	2
  1291  0026                     _boost_state:	
  1292  0026                     	ds	2
  1293  0028                     _feedback_state:	
  1294  0028                     	ds	2
  1295  002A                     _fuzz_down:	
  1296  002A                     	ds	2
  1297  002C                     _fuzz_state:	
  1298  002C                     	ds	2
  1299  002E                     _fuzz_toggle:	
  1300  002E                     	ds	2
  1301  0030                     _fuzz_turning_on:	
  1302  0030                     	ds	2
  1303  0032                     _last_boost_state:	
  1304  0032                     	ds	2
  1305                           
  1306                           	psect	dataBANK0
  1307  0034                     __pdataBANK0:	
  1308  0034                     _boost_up:	
  1309  0034                     	ds	2
  1310  0036                     _fuzz_up:	
  1311  0036                     	ds	2
  1312  0038                     _long_press_limit:	
  1313  0038                     	ds	2
  1314                           
  1315                           	psect	clrtext
  1316  01BC                     clear_ram0:	
  1317                           ;	Called with FSR0 containing the base address, and
  1318                           ;	WREG with the size to clear
  1319                           
  1320  01BC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1321  01BD                     clrloop0:	
  1322  01BD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1323  01BE  3101               	addfsr 0,1
  1324  01BF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1325  01C0  29BD               	goto	clrloop0	;have we reached the end yet?
  1326  01C1  3400               	retlw	0	;all done for this memory range, return
  1327                           
  1328                           	psect	cstackCOMMON
  1329  0070                     __pcstackCOMMON:	
  1330  0070                     ?_ConfigureOscillator:	
  1331  0070                     ?_InitApp:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_initFuzz:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?_initBoost:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_init_adc:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?_isr:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ??_isr:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_main:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x0
  1354  0070                     	ds	1
  1355  0071                     ??_ConfigureOscillator:	
  1356  0071                     ??_InitApp:	
  1357                           ; 1 bytes @ 0x1
  1358                           
  1359  0071                     ??_initFuzz:	
  1360                           ; 1 bytes @ 0x1
  1361                           
  1362  0071                     ??_initBoost:	
  1363                           ; 1 bytes @ 0x1
  1364                           
  1365  0071                     ??_init_adc:	
  1366                           ; 1 bytes @ 0x1
  1367                           
  1368  0071                     ?_setFeedbackState:	
  1369                           ; 1 bytes @ 0x1
  1370                           
  1371  0071                     ?_setFuzzState:	
  1372                           ; 1 bytes @ 0x1
  1373                           
  1374  0071                     ?_setBoostState:	
  1375                           ; 1 bytes @ 0x1
  1376                           
  1377  0071                     setFuzzState@f_state:	
  1378                           ; 1 bytes @ 0x1
  1379                           
  1380  0071                     setFeedbackState@f_state:	
  1381                           ; 2 bytes @ 0x1
  1382                           
  1383  0071                     setBoostState@f_state:	
  1384                           ; 2 bytes @ 0x1
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0x1
  1388  0071                     	ds	2
  1389  0073                     ?_updateFuzz:	
  1390  0073                     ?_updateBoost:	
  1391                           ; 1 bytes @ 0x3
  1392                           
  1393  0073                     ??_setFeedbackState:	
  1394                           ; 1 bytes @ 0x3
  1395                           
  1396  0073                     ??_setFuzzState:	
  1397                           ; 1 bytes @ 0x3
  1398                           
  1399  0073                     ??_setBoostState:	
  1400                           ; 1 bytes @ 0x3
  1401                           
  1402  0073                     updateFuzz@debounce_limit:	
  1403                           ; 1 bytes @ 0x3
  1404                           
  1405  0073                     updateBoost@debounce_limit:	
  1406                           ; 2 bytes @ 0x3
  1407                           
  1408                           
  1409                           ; 2 bytes @ 0x3
  1410  0073                     	ds	2
  1411  0075                     ??_updateFuzz:	
  1412  0075                     ??_updateBoost:	
  1413                           ; 1 bytes @ 0x5
  1414                           
  1415                           
  1416                           ; 1 bytes @ 0x5
  1417  0075                     	ds	2
  1418  0077                     ??_main:	
  1419                           
  1420                           	psect	maintext
  1421  0186                     __pmaintext:	
  1422                           ; 1 bytes @ 0x7
  1423 ;;
  1424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1425 ;;
  1426 ;; *************** function _main *****************
  1427 ;; Defined at:
  1428 ;;		line 27 in file "main.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : B1F/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1
  1442 ;;      Params:         0       0       0
  1443 ;;      Locals:         0       0       0
  1444 ;;      Temps:          0       0       0
  1445 ;;      Totals:         0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels required when called:    3
  1448 ;; This function calls:
  1449 ;;		_ConfigureOscillator
  1450 ;;		_InitApp
  1451 ;;		_initBoost
  1452 ;;		_initFuzz
  1453 ;;		_updateBoost
  1454 ;;		_updateFuzz
  1455 ;; This function is called by:
  1456 ;;		Startup code after reset
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _main
  1462  0186                     _main:	
  1463                           
  1464                           ;main.c: 28: ConfigureOscillator();
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1468  0186  21C2               	fcall	_ConfigureOscillator
  1469                           
  1470                           ;main.c: 29: InitApp();
  1471  0187  2175               	fcall	_InitApp
  1472                           
  1473                           ;main.c: 31: initFuzz();
  1474  0188  2195               	fcall	_initFuzz
  1475                           
  1476                           ;main.c: 32: initBoost();
  1477  0189  21AE               	fcall	_initBoost
  1478  018A                     l58:	
  1479                           ;main.c: 34: while (1) {
  1480                           
  1481                           
  1482                           ;main.c: 35: updateFuzz(debounce_limit);
  1483  018A  087C               	movf	_debounce_limit+1,w
  1484  018B  00F4               	movwf	updateFuzz@debounce_limit+1
  1485  018C  087B               	movf	_debounce_limit,w
  1486  018D  00F3               	movwf	updateFuzz@debounce_limit
  1487  018E  202F               	fcall	_updateFuzz
  1488                           
  1489                           ;main.c: 36: updateBoost(debounce_limit);
  1490  018F  087C               	movf	_debounce_limit+1,w
  1491  0190  00F4               	movwf	updateBoost@debounce_limit+1
  1492  0191  087B               	movf	_debounce_limit,w
  1493  0192  00F3               	movwf	updateBoost@debounce_limit
  1494  0193  20CE               	fcall	_updateBoost
  1495  0194  298A               	goto	l58
  1496  0195                     __end_of_main:	
  1497                           
  1498                           	psect	text1
  1499  002F                     __ptext1:	
  1500 ;; *************** function _updateFuzz *****************
  1501 ;; Defined at:
  1502 ;;		line 40 in file "mcc_generated_files/fuzz.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  debounce_lim    2    3[COMMON] int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1
  1516 ;;      Params:         2       0       0
  1517 ;;      Locals:         0       0       0
  1518 ;;      Temps:          1       0       0
  1519 ;;      Totals:         3       0       0
  1520 ;;Total ram usage:        3 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    2
  1523 ;; This function calls:
  1524 ;;		_setFeedbackState
  1525 ;;		_setFuzzState
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _updateFuzz
  1533  002F                     _updateFuzz:	
  1534                           
  1535                           ;fuzz.c: 47: if (PORTAbits.RA4 == 0) {
  1536                           
  1537                           ;incstack = 0
  1538                           ; Regs used in _updateFuzz: [wreg+status,2+status,0+pclath+cstack]
  1539  002F  0020               	movlb	0	; select bank0
  1540  0030  1A0C               	btfsc	12,4	;volatile
  1541  0031  2841               	goto	l916
  1542                           
  1543                           ;fuzz.c: 48: if (fuzz_pressed > 0) {
  1544  0032  087A               	movf	_fuzz_pressed+1,w
  1545  0033  3A80               	xorlw	128
  1546  0034  00F5               	movwf	??_updateFuzz
  1547  0035  3080               	movlw	128
  1548  0036  0275               	subwf	??_updateFuzz,w
  1549  0037  1D03               	skipz
  1550  0038  283B               	goto	u425
  1551  0039  3001               	movlw	1
  1552  003A  0279               	subwf	_fuzz_pressed,w
  1553  003B                     u425:	
  1554  003B  1C03               	skipc
  1555  003C  2851               	goto	l920
  1556                           
  1557                           ;fuzz.c: 49: fuzz_pressed--;
  1558  003D  30FF               	movlw	255
  1559  003E  07F9               	addwf	_fuzz_pressed,f
  1560  003F  30FF               	movlw	255
  1561  0040  2850               	goto	L1
  1562  0041                     l916:	
  1563                           ;fuzz.c: 50: }
  1564                           ;fuzz.c: 51: } else if (fuzz_pressed < debounce_limit) {
  1565                           
  1566  0041  087A               	movf	_fuzz_pressed+1,w
  1567  0042  3A80               	xorlw	128
  1568  0043  00F5               	movwf	??_updateFuzz
  1569  0044  0874               	movf	updateFuzz@debounce_limit+1,w
  1570  0045  3A80               	xorlw	128
  1571  0046  0275               	subwf	??_updateFuzz,w
  1572  0047  1D03               	skipz
  1573  0048  284B               	goto	u435
  1574  0049  0873               	movf	updateFuzz@debounce_limit,w
  1575  004A  0279               	subwf	_fuzz_pressed,w
  1576  004B                     u435:	
  1577  004B  1803               	skipnc
  1578  004C  2851               	goto	l920
  1579                           
  1580                           ;fuzz.c: 52: fuzz_pressed++;
  1581  004D  3001               	movlw	1
  1582  004E  07F9               	addwf	_fuzz_pressed,f
  1583  004F  3000               	movlw	0
  1584  0050                     L1:	
  1585  0050  3DFA               	addwfc	_fuzz_pressed+1,f
  1586  0051                     l920:	
  1587                           
  1588                           ;fuzz.c: 54: }
  1589                           ;fuzz.c: 60: if (fuzz_pressed == 0) {
  1590  0051  0879               	movf	_fuzz_pressed,w
  1591  0052  047A               	iorwf	_fuzz_pressed+1,w
  1592  0053  1D03               	btfss	3,2
  1593  0054  289A               	goto	l950
  1594                           
  1595                           ;fuzz.c: 62: fuzz_down++;
  1596  0055  3001               	movlw	1
  1597  0056  0020               	movlb	0	; select bank0
  1598  0057  07AA               	addwf	_fuzz_down,f
  1599  0058  3000               	movlw	0
  1600  0059  3DAB               	addwfc	_fuzz_down+1,f
  1601                           
  1602                           ;fuzz.c: 63: if (fuzz_state == 1) {
  1603  005A  032C               	decf	_fuzz_state,w
  1604  005B  042D               	iorwf	_fuzz_state+1,w
  1605  005C  1D03               	btfss	3,2
  1606  005D  2887               	goto	l940
  1607                           
  1608                           ;fuzz.c: 64: if (fuzz_up == 1) {
  1609  005E  0336               	decf	_fuzz_up,w
  1610  005F  0437               	iorwf	_fuzz_up+1,w
  1611  0060  1D03               	btfss	3,2
  1612  0061  2866               	goto	l149
  1613                           
  1614                           ;fuzz.c: 65: fuzz_toggle = 1;
  1615  0062  3001               	movlw	1
  1616  0063  00AE               	movwf	_fuzz_toggle
  1617  0064  3000               	movlw	0
  1618  0065  00AF               	movwf	_fuzz_toggle+1
  1619  0066                     l149:	
  1620                           
  1621                           ;fuzz.c: 66: }
  1622                           ;fuzz.c: 68: if (fuzz_down >= long_press_limit && feedback_state == 0 && fuzz_turning_on
      +                           == 0) {
  1623  0066  082B               	movf	_fuzz_down+1,w
  1624  0067  3A80               	xorlw	128
  1625  0068  00F5               	movwf	??_updateFuzz
  1626  0069  0839               	movf	_long_press_limit+1,w
  1627  006A  3A80               	xorlw	128
  1628  006B  0275               	subwf	??_updateFuzz,w
  1629  006C  1D03               	skipz
  1630  006D  2870               	goto	u475
  1631  006E  0838               	movf	_long_press_limit,w
  1632  006F  022A               	subwf	_fuzz_down,w
  1633  0070                     u475:	
  1634  0070  1C03               	skipc
  1635  0071  2896               	goto	l948
  1636  0072  0020               	movlb	0	; select bank0
  1637  0073  0828               	movf	_feedback_state,w
  1638  0074  0429               	iorwf	_feedback_state+1,w
  1639  0075  1D03               	btfss	3,2
  1640  0076  2896               	goto	l948
  1641  0077  0830               	movf	_fuzz_turning_on,w
  1642  0078  0431               	iorwf	_fuzz_turning_on+1,w
  1643  0079  1D03               	btfss	3,2
  1644  007A  2896               	goto	l948
  1645                           
  1646                           ;fuzz.c: 70: fuzz_down = long_press_limit;
  1647  007B  0839               	movf	_long_press_limit+1,w
  1648  007C  00AB               	movwf	_fuzz_down+1
  1649  007D  0838               	movf	_long_press_limit,w
  1650  007E  00AA               	movwf	_fuzz_down
  1651                           
  1652                           ;fuzz.c: 71: LATAbits.LATA2 = 0;
  1653  007F  0022               	movlb	2	; select bank2
  1654  0080  110C               	bcf	12,2	;volatile
  1655                           
  1656                           ;fuzz.c: 72: setFeedbackState(1);
  1657  0081  3001               	movlw	1
  1658  0082  00F1               	movwf	setFeedbackState@f_state
  1659  0083  3000               	movlw	0
  1660  0084  00F2               	movwf	setFeedbackState@f_state+1
  1661  0085  2141               	fcall	_setFeedbackState
  1662                           
  1663                           ;fuzz.c: 73: }
  1664                           ;fuzz.c: 74: } else {
  1665  0086  2896               	goto	l948
  1666  0087                     l940:	
  1667                           
  1668                           ;fuzz.c: 76: fuzz_turning_on = 1;
  1669  0087  3001               	movlw	1
  1670  0088  0020               	movlb	0	; select bank0
  1671  0089  00B0               	movwf	_fuzz_turning_on
  1672  008A  3000               	movlw	0
  1673  008B  00B1               	movwf	_fuzz_turning_on+1
  1674                           
  1675                           ;fuzz.c: 77: fuzz_toggle = 0;
  1676  008C  01AE               	clrf	_fuzz_toggle
  1677  008D  01AF               	clrf	_fuzz_toggle+1
  1678                           
  1679                           ;fuzz.c: 78: setFuzzState(1);
  1680  008E  3001               	movlw	1
  1681  008F  00F1               	movwf	setFuzzState@f_state
  1682  0090  3000               	movlw	0
  1683  0091  00F2               	movwf	setFuzzState@f_state+1
  1684  0092  2127               	fcall	_setFuzzState
  1685                           
  1686                           ;fuzz.c: 79: feedback_state = 0;
  1687  0093  0020               	movlb	0	; select bank0
  1688  0094  01A8               	clrf	_feedback_state
  1689  0095  01A9               	clrf	_feedback_state+1
  1690  0096                     l948:	
  1691                           
  1692                           ;fuzz.c: 80: }
  1693                           ;fuzz.c: 83: fuzz_up = 0;
  1694  0096  0020               	movlb	0	; select bank0
  1695  0097  01B6               	clrf	_fuzz_up
  1696  0098  01B7               	clrf	_fuzz_up+1
  1697                           
  1698                           ;fuzz.c: 84: } else if (fuzz_pressed >= debounce_limit) {
  1699  0099  0008               	return
  1700  009A                     l950:	
  1701  009A  087A               	movf	_fuzz_pressed+1,w
  1702  009B  3A80               	xorlw	128
  1703  009C  00F5               	movwf	??_updateFuzz
  1704  009D  0874               	movf	updateFuzz@debounce_limit+1,w
  1705  009E  3A80               	xorlw	128
  1706  009F  0275               	subwf	??_updateFuzz,w
  1707  00A0  1D03               	skipz
  1708  00A1  28A4               	goto	u505
  1709  00A2  0873               	movf	updateFuzz@debounce_limit,w
  1710  00A3  0279               	subwf	_fuzz_pressed,w
  1711  00A4                     u505:	
  1712  00A4  1C03               	skipc
  1713  00A5  0008               	return
  1714                           
  1715                           ;fuzz.c: 87: setFeedbackState(0);
  1716  00A6  3000               	movlw	0
  1717  00A7  00F1               	movwf	setFeedbackState@f_state
  1718  00A8  00F2               	movwf	setFeedbackState@f_state+1
  1719  00A9  2141               	fcall	_setFeedbackState
  1720                           
  1721                           ;fuzz.c: 88: if (fuzz_toggle == 1 && feedback_state == 0) {
  1722  00AA  0020               	movlb	0	; select bank0
  1723  00AB  032E               	decf	_fuzz_toggle,w
  1724  00AC  042F               	iorwf	_fuzz_toggle+1,w
  1725  00AD  1D03               	btfss	3,2
  1726  00AE  28B7               	goto	l960
  1727  00AF  0828               	movf	_feedback_state,w
  1728  00B0  0429               	iorwf	_feedback_state+1,w
  1729  00B1  1D03               	btfss	3,2
  1730  00B2  28B7               	goto	l960
  1731                           
  1732                           ;fuzz.c: 89: setFuzzState(0);
  1733  00B3  3000               	movlw	0
  1734  00B4  00F1               	movwf	setFuzzState@f_state
  1735  00B5  00F2               	movwf	setFuzzState@f_state+1
  1736  00B6  2127               	fcall	_setFuzzState
  1737  00B7                     l960:	
  1738                           
  1739                           ;fuzz.c: 90: }
  1740                           ;fuzz.c: 91: LATAbits.LATA2 = fuzz_state;
  1741  00B7  0020               	movlb	0	; select bank0
  1742  00B8  0C2C               	rrf	_fuzz_state,w
  1743  00B9  0022               	movlb	2	; select bank2
  1744  00BA  1C03               	skipc
  1745  00BB  110C               	bcf	12,2	;volatile
  1746  00BC  1803               	skipnc
  1747  00BD  150C               	bsf	12,2	;volatile
  1748                           
  1749                           ;fuzz.c: 92: fuzz_turning_on = 0;
  1750  00BE  0020               	movlb	0	; select bank0
  1751  00BF  01B0               	clrf	_fuzz_turning_on
  1752  00C0  01B1               	clrf	_fuzz_turning_on+1
  1753                           
  1754                           ;fuzz.c: 93: fuzz_toggle = 0;
  1755  00C1  01AE               	clrf	_fuzz_toggle
  1756  00C2  01AF               	clrf	_fuzz_toggle+1
  1757                           
  1758                           ;fuzz.c: 94: fuzz_up = 1;
  1759  00C3  3001               	movlw	1
  1760  00C4  00B6               	movwf	_fuzz_up
  1761  00C5  3000               	movlw	0
  1762  00C6  00B7               	movwf	_fuzz_up+1
  1763                           
  1764                           ;fuzz.c: 95: fuzz_down = 0;
  1765  00C7  01AA               	clrf	_fuzz_down
  1766  00C8  01AB               	clrf	_fuzz_down+1
  1767                           
  1768                           ;fuzz.c: 96: fuzz_pressed = debounce_limit;
  1769  00C9  0874               	movf	updateFuzz@debounce_limit+1,w
  1770  00CA  00FA               	movwf	_fuzz_pressed+1
  1771  00CB  0873               	movf	updateFuzz@debounce_limit,w
  1772  00CC  00F9               	movwf	_fuzz_pressed
  1773  00CD  0008               	return
  1774  00CE                     __end_of_updateFuzz:	
  1775                           
  1776                           	psect	text2
  1777  0127                     __ptext2:	
  1778 ;; *************** function _setFuzzState *****************
  1779 ;; Defined at:
  1780 ;;		line 100 in file "mcc_generated_files/fuzz.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  f_state         2    1[COMMON] int 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1
  1794 ;;      Params:         2       0       0
  1795 ;;      Locals:         0       0       0
  1796 ;;      Temps:          0       0       0
  1797 ;;      Totals:         2       0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_updateFuzz
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _setFuzzState
  1810  0127                     _setFuzzState:	
  1811                           
  1812                           ;fuzz.c: 101: fuzz_state = f_state;
  1813                           
  1814                           ;incstack = 0
  1815                           ; Regs used in _setFuzzState: [wreg+status,2+status,0]
  1816  0127  0872               	movf	setFuzzState@f_state+1,w
  1817  0128  0020               	movlb	0	; select bank0
  1818  0129  00AD               	movwf	_fuzz_state+1
  1819  012A  0871               	movf	setFuzzState@f_state,w
  1820  012B  00AC               	movwf	_fuzz_state
  1821                           
  1822                           ;fuzz.c: 102: LATAbits.LATA2 = f_state;
  1823  012C  0C71               	rrf	setFuzzState@f_state,w
  1824  012D  0022               	movlb	2	; select bank2
  1825  012E  1C03               	skipc
  1826  012F  110C               	bcf	12,2	;volatile
  1827  0130  1803               	skipnc
  1828  0131  150C               	bsf	12,2	;volatile
  1829                           
  1830                           ;fuzz.c: 103: LATCbits.LATC1 = !f_state;
  1831  0132  0871               	movf	setFuzzState@f_state,w
  1832  0133  0472               	iorwf	setFuzzState@f_state+1,w
  1833  0134  1D03               	btfss	3,2
  1834  0135  2939               	goto	u370
  1835  0136  0022               	movlb	2	; select bank2
  1836  0137  148E               	bsf	14,1	;volatile
  1837  0138  293B               	goto	l878
  1838  0139                     u370:	
  1839  0139  0022               	movlb	2	; select bank2
  1840  013A  108E               	bcf	14,1	;volatile
  1841  013B                     l878:	
  1842                           
  1843                           ;fuzz.c: 104: LATCbits.LATC2 = f_state;
  1844  013B  0C71               	rrf	setFuzzState@f_state,w
  1845  013C  1C03               	skipc
  1846  013D  110E               	bcf	14,2	;volatile
  1847  013E  1803               	skipnc
  1848  013F  150E               	bsf	14,2	;volatile
  1849  0140  0008               	return
  1850  0141                     __end_of_setFuzzState:	
  1851                           
  1852                           	psect	text3
  1853  0141                     __ptext3:	
  1854 ;; *************** function _setFeedbackState *****************
  1855 ;; Defined at:
  1856 ;;		line 108 in file "mcc_generated_files/fuzz.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  f_state         2    1[COMMON] int 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1
  1870 ;;      Params:         2       0       0
  1871 ;;      Locals:         0       0       0
  1872 ;;      Temps:          0       0       0
  1873 ;;      Totals:         2       0       0
  1874 ;;Total ram usage:        2 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    1
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_updateFuzz
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _setFeedbackState
  1886  0141                     _setFeedbackState:	
  1887                           
  1888                           ;fuzz.c: 109: feedback_state = f_state;
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _setFeedbackState: [wreg+status,2+status,0]
  1892  0141  0872               	movf	setFeedbackState@f_state+1,w
  1893  0142  0020               	movlb	0	; select bank0
  1894  0143  00A9               	movwf	_feedback_state+1
  1895  0144  0871               	movf	setFeedbackState@f_state,w
  1896  0145  00A8               	movwf	_feedback_state
  1897                           
  1898                           ;fuzz.c: 110: LATCbits.LATC3 = f_state;
  1899  0146  0C71               	rrf	setFeedbackState@f_state,w
  1900  0147  0022               	movlb	2	; select bank2
  1901  0148  1C03               	skipc
  1902  0149  118E               	bcf	14,3	;volatile
  1903  014A  1803               	skipnc
  1904  014B  158E               	bsf	14,3	;volatile
  1905                           
  1906                           ;fuzz.c: 111: LATAbits.LATA0 = !f_state;
  1907  014C  0871               	movf	setFeedbackState@f_state,w
  1908  014D  0472               	iorwf	setFeedbackState@f_state+1,w
  1909  014E  1D03               	btfss	3,2
  1910  014F  2953               	goto	u350
  1911  0150  0022               	movlb	2	; select bank2
  1912  0151  140C               	bsf	12,0	;volatile
  1913  0152  2955               	goto	l870
  1914  0153                     u350:	
  1915  0153  0022               	movlb	2	; select bank2
  1916  0154  100C               	bcf	12,0	;volatile
  1917  0155                     l870:	
  1918                           
  1919                           ;fuzz.c: 112: LATAbits.LATA1 = f_state;
  1920  0155  0C71               	rrf	setFeedbackState@f_state,w
  1921  0156  1C03               	skipc
  1922  0157  108C               	bcf	12,1	;volatile
  1923  0158  1803               	skipnc
  1924  0159  148C               	bsf	12,1	;volatile
  1925  015A  0008               	return
  1926  015B                     __end_of_setFeedbackState:	
  1927                           
  1928                           	psect	text4
  1929  00CE                     __ptext4:	
  1930 ;; *************** function _updateBoost *****************
  1931 ;; Defined at:
  1932 ;;		line 29 in file "mcc_generated_files/boost.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  debounce_lim    2    3[COMMON] int 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1
  1946 ;;      Params:         2       0       0
  1947 ;;      Locals:         0       0       0
  1948 ;;      Temps:          2       0       0
  1949 ;;      Totals:         4       0       0
  1950 ;;Total ram usage:        4 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    2
  1953 ;; This function calls:
  1954 ;;		_setBoostState
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function _updateBoost
  1962  00CE                     _updateBoost:	
  1963                           
  1964                           ;boost.c: 36: if (PORTAbits.RA5 == 0) {
  1965                           
  1966                           ;incstack = 0
  1967                           ; Regs used in _updateBoost: [wreg+status,2+status,0+pclath+cstack]
  1968  00CE  0020               	movlb	0	; select bank0
  1969  00CF  1A8C               	btfsc	12,5	;volatile
  1970  00D0  28E0               	goto	l978
  1971                           
  1972                           ;boost.c: 37: if (boost_pressed > 0) {
  1973  00D1  0878               	movf	_boost_pressed+1,w
  1974  00D2  3A80               	xorlw	128
  1975  00D3  00F5               	movwf	??_updateBoost
  1976  00D4  3080               	movlw	128
  1977  00D5  0275               	subwf	??_updateBoost,w
  1978  00D6  1D03               	skipz
  1979  00D7  28DA               	goto	u545
  1980  00D8  3001               	movlw	1
  1981  00D9  0277               	subwf	_boost_pressed,w
  1982  00DA                     u545:	
  1983  00DA  1C03               	skipc
  1984  00DB  28F0               	goto	l982
  1985                           
  1986                           ;boost.c: 38: boost_pressed--;
  1987  00DC  30FF               	movlw	255
  1988  00DD  07F7               	addwf	_boost_pressed,f
  1989  00DE  30FF               	movlw	255
  1990  00DF  28EF               	goto	L2
  1991  00E0                     l978:	
  1992                           ;boost.c: 39: }
  1993                           ;boost.c: 40: } else if (boost_pressed < debounce_limit) {
  1994                           
  1995  00E0  0878               	movf	_boost_pressed+1,w
  1996  00E1  3A80               	xorlw	128
  1997  00E2  00F5               	movwf	??_updateBoost
  1998  00E3  0874               	movf	updateBoost@debounce_limit+1,w
  1999  00E4  3A80               	xorlw	128
  2000  00E5  0275               	subwf	??_updateBoost,w
  2001  00E6  1D03               	skipz
  2002  00E7  28EA               	goto	u555
  2003  00E8  0873               	movf	updateBoost@debounce_limit,w
  2004  00E9  0277               	subwf	_boost_pressed,w
  2005  00EA                     u555:	
  2006  00EA  1803               	skipnc
  2007  00EB  28F0               	goto	l982
  2008                           
  2009                           ;boost.c: 41: boost_pressed++;
  2010  00EC  3001               	movlw	1
  2011  00ED  07F7               	addwf	_boost_pressed,f
  2012  00EE  3000               	movlw	0
  2013  00EF                     L2:	
  2014  00EF  3DF8               	addwfc	_boost_pressed+1,f
  2015  00F0                     l982:	
  2016                           
  2017                           ;boost.c: 42: }
  2018                           ;boost.c: 48: if (boost_pressed == 0) {
  2019  00F0  0877               	movf	_boost_pressed,w
  2020  00F1  0478               	iorwf	_boost_pressed+1,w
  2021  00F2  1D03               	btfss	3,2
  2022  00F3  290F               	goto	l992
  2023                           
  2024                           ;boost.c: 50: boost_down = 1;
  2025  00F4  3001               	movlw	1
  2026  00F5  0020               	movlb	0	; select bank0
  2027  00F6  00A4               	movwf	_boost_down
  2028  00F7  3000               	movlw	0
  2029  00F8  00A5               	movwf	_boost_down+1
  2030                           
  2031                           ;boost.c: 51: if (boost_up == 1) {
  2032  00F9  0334               	decf	_boost_up,w
  2033  00FA  0435               	iorwf	_boost_up+1,w
  2034  00FB  1D03               	btfss	3,2
  2035  00FC  290B               	goto	l990
  2036                           
  2037                           ;boost.c: 52: setBoostState(!boost_state);
  2038  00FD  0826               	movf	_boost_state,w
  2039  00FE  0427               	iorwf	_boost_state+1,w
  2040  00FF  1D03               	btfss	3,2
  2041  0100  2903               	goto	u580
  2042  0101  3001               	movlw	1
  2043  0102  2904               	goto	u590
  2044  0103                     u580:	
  2045  0103  3000               	movlw	0
  2046  0104                     u590:	
  2047  0104  00F5               	movwf	??_updateBoost
  2048  0105  01F6               	clrf	??_updateBoost+1
  2049  0106  0875               	movf	??_updateBoost,w
  2050  0107  00F1               	movwf	setBoostState@f_state
  2051  0108  0876               	movf	??_updateBoost+1,w
  2052  0109  00F2               	movwf	setBoostState@f_state+1
  2053  010A  215B               	fcall	_setBoostState
  2054  010B                     l990:	
  2055                           
  2056                           ;boost.c: 53: }
  2057                           ;boost.c: 54: boost_up = 0;
  2058  010B  0020               	movlb	0	; select bank0
  2059  010C  01B4               	clrf	_boost_up
  2060  010D  01B5               	clrf	_boost_up+1
  2061                           
  2062                           ;boost.c: 55: } else if (boost_pressed >= debounce_limit) {
  2063  010E  0008               	return
  2064  010F                     l992:	
  2065  010F  0878               	movf	_boost_pressed+1,w
  2066  0110  3A80               	xorlw	128
  2067  0111  00F5               	movwf	??_updateBoost
  2068  0112  0874               	movf	updateBoost@debounce_limit+1,w
  2069  0113  3A80               	xorlw	128
  2070  0114  0275               	subwf	??_updateBoost,w
  2071  0115  1D03               	skipz
  2072  0116  2919               	goto	u605
  2073  0117  0873               	movf	updateBoost@debounce_limit,w
  2074  0118  0277               	subwf	_boost_pressed,w
  2075  0119                     u605:	
  2076  0119  1C03               	skipc
  2077  011A  0008               	return
  2078                           
  2079                           ;boost.c: 56: boost_up = 1;
  2080  011B  3001               	movlw	1
  2081  011C  0020               	movlb	0	; select bank0
  2082  011D  00B4               	movwf	_boost_up
  2083  011E  3000               	movlw	0
  2084  011F  00B5               	movwf	_boost_up+1
  2085                           
  2086                           ;boost.c: 57: boost_down = 0;
  2087  0120  01A4               	clrf	_boost_down
  2088  0121  01A5               	clrf	_boost_down+1
  2089                           
  2090                           ;boost.c: 58: boost_pressed = debounce_limit;
  2091  0122  0874               	movf	updateBoost@debounce_limit+1,w
  2092  0123  00F8               	movwf	_boost_pressed+1
  2093  0124  0873               	movf	updateBoost@debounce_limit,w
  2094  0125  00F7               	movwf	_boost_pressed
  2095  0126  0008               	return
  2096  0127                     __end_of_updateBoost:	
  2097                           
  2098                           	psect	text5
  2099  015B                     __ptext5:	
  2100 ;; *************** function _setBoostState *****************
  2101 ;; Defined at:
  2102 ;;		line 65 in file "mcc_generated_files/boost.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  f_state         2    1[COMMON] int 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1
  2116 ;;      Params:         2       0       0
  2117 ;;      Locals:         0       0       0
  2118 ;;      Temps:          0       0       0
  2119 ;;      Totals:         2       0       0
  2120 ;;Total ram usage:        2 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_updateBoost
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _setBoostState
  2132  015B                     _setBoostState:	
  2133                           
  2134                           ;boost.c: 66: boost_state = f_state;
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in _setBoostState: [wreg+status,2+status,0]
  2138  015B  0872               	movf	setBoostState@f_state+1,w
  2139  015C  0020               	movlb	0	; select bank0
  2140  015D  00A7               	movwf	_boost_state+1
  2141  015E  0871               	movf	setBoostState@f_state,w
  2142  015F  00A6               	movwf	_boost_state
  2143                           
  2144                           ;boost.c: 67: LATCbits.LATC5 = f_state;
  2145  0160  0C71               	rrf	setBoostState@f_state,w
  2146  0161  0022               	movlb	2	; select bank2
  2147  0162  1C03               	skipc
  2148  0163  128E               	bcf	14,5	;volatile
  2149  0164  1803               	skipnc
  2150  0165  168E               	bsf	14,5	;volatile
  2151                           
  2152                           ;boost.c: 68: LATCbits.LATC4 = !f_state;
  2153  0166  0871               	movf	setBoostState@f_state,w
  2154  0167  0472               	iorwf	setBoostState@f_state+1,w
  2155  0168  1D03               	btfss	3,2
  2156  0169  296D               	goto	u390
  2157  016A  0022               	movlb	2	; select bank2
  2158  016B  160E               	bsf	14,4	;volatile
  2159  016C  296F               	goto	l886
  2160  016D                     u390:	
  2161  016D  0022               	movlb	2	; select bank2
  2162  016E  120E               	bcf	14,4	;volatile
  2163  016F                     l886:	
  2164                           
  2165                           ;boost.c: 69: LATCbits.LATC0 = f_state;
  2166  016F  0C71               	rrf	setBoostState@f_state,w
  2167  0170  1C03               	skipc
  2168  0171  100E               	bcf	14,0	;volatile
  2169  0172  1803               	skipnc
  2170  0173  140E               	bsf	14,0	;volatile
  2171  0174  0008               	return
  2172  0175                     __end_of_setBoostState:	
  2173                           
  2174                           	psect	text6
  2175  0195                     __ptext6:	
  2176 ;; *************** function _initFuzz *****************
  2177 ;; Defined at:
  2178 ;;		line 27 in file "mcc_generated_files/fuzz.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		status,2
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1
  2192 ;;      Params:         0       0       0
  2193 ;;      Locals:         0       0       0
  2194 ;;      Temps:          0       0       0
  2195 ;;      Totals:         0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _initFuzz
  2208  0195                     _initFuzz:	
  2209                           
  2210                           ;fuzz.c: 28: fuzz_state = 0;
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _initFuzz: [status,2]
  2214  0195  0020               	movlb	0	; select bank0
  2215  0196  01AC               	clrf	_fuzz_state
  2216  0197  01AD               	clrf	_fuzz_state+1
  2217                           
  2218                           ;fuzz.c: 29: LATAbits.LATA2 = 0;
  2219  0198  0022               	movlb	2	; select bank2
  2220  0199  110C               	bcf	12,2	;volatile
  2221                           
  2222                           ;fuzz.c: 30: LATCbits.LATC1 = 1;
  2223  019A  148E               	bsf	14,1	;volatile
  2224                           
  2225                           ;fuzz.c: 31: LATCbits.LATC2 = 0;
  2226  019B  110E               	bcf	14,2	;volatile
  2227                           
  2228                           ;fuzz.c: 33: feedback_state = 0;
  2229  019C  0020               	movlb	0	; select bank0
  2230  019D  01A8               	clrf	_feedback_state
  2231  019E  01A9               	clrf	_feedback_state+1
  2232                           
  2233                           ;fuzz.c: 34: LATCbits.LATC3 = 0;
  2234  019F  0022               	movlb	2	; select bank2
  2235  01A0  118E               	bcf	14,3	;volatile
  2236                           
  2237                           ;fuzz.c: 35: LATAbits.LATA0 = 0;
  2238  01A1  100C               	bcf	12,0	;volatile
  2239                           
  2240                           ;fuzz.c: 36: LATAbits.LATA1 = 1;
  2241  01A2  148C               	bsf	12,1	;volatile
  2242  01A3  0008               	return
  2243  01A4                     __end_of_initFuzz:	
  2244                           
  2245                           	psect	text7
  2246  01AE                     __ptext7:	
  2247 ;; *************** function _initBoost *****************
  2248 ;; Defined at:
  2249 ;;		line 21 in file "mcc_generated_files/boost.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		status,2
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1
  2263 ;;      Params:         0       0       0
  2264 ;;      Locals:         0       0       0
  2265 ;;      Temps:          0       0       0
  2266 ;;      Totals:         0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    1
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _initBoost
  2279  01AE                     _initBoost:	
  2280                           
  2281                           ;boost.c: 22: boost_state = 0;
  2282                           
  2283                           ;incstack = 0
  2284                           ; Regs used in _initBoost: [status,2]
  2285  01AE  0020               	movlb	0	; select bank0
  2286  01AF  01A6               	clrf	_boost_state
  2287  01B0  01A7               	clrf	_boost_state+1
  2288                           
  2289                           ;boost.c: 23: LATCbits.LATC5 = 0;
  2290  01B1  0022               	movlb	2	; select bank2
  2291  01B2  128E               	bcf	14,5	;volatile
  2292                           
  2293                           ;boost.c: 24: LATCbits.LATC4 = 1;
  2294  01B3  160E               	bsf	14,4	;volatile
  2295                           
  2296                           ;boost.c: 25: LATCbits.LATC0 = 0;
  2297  01B4  100E               	bcf	14,0	;volatile
  2298  01B5  0008               	return
  2299  01B6                     __end_of_initBoost:	
  2300                           
  2301                           	psect	text8
  2302  0175                     __ptext8:	
  2303 ;; *************** function _InitApp *****************
  2304 ;; Defined at:
  2305 ;;		line 27 in file "user.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1
  2319 ;;      Params:         0       0       0
  2320 ;;      Locals:         0       0       0
  2321 ;;      Temps:          0       0       0
  2322 ;;      Totals:         0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    2
  2326 ;; This function calls:
  2327 ;;		_init_adc
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _InitApp
  2335  0175                     _InitApp:	
  2336                           
  2337                           ;user.c: 28: TRISAbits.TRISA0 = 0;
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  2341  0175  0021               	movlb	1	; select bank1
  2342  0176  100C               	bcf	12,0	;volatile
  2343                           
  2344                           ;user.c: 29: TRISAbits.TRISA1 = 0;
  2345  0177  108C               	bcf	12,1	;volatile
  2346                           
  2347                           ;user.c: 31: TRISAbits.TRISA2 = 0;
  2348  0178  110C               	bcf	12,2	;volatile
  2349                           
  2350                           ;user.c: 32: TRISAbits.TRISA4 = 1;
  2351  0179  160C               	bsf	12,4	;volatile
  2352                           
  2353                           ;user.c: 33: TRISAbits.TRISA5 = 1;
  2354  017A  168C               	bsf	12,5	;volatile
  2355                           
  2356                           ;user.c: 34: ANSELAbits.ANSA4 = 0;
  2357  017B  0023               	movlb	3	; select bank3
  2358  017C  120C               	bcf	12,4	;volatile
  2359                           
  2360                           ;user.c: 36: TRISCbits.TRISC0 = 0;
  2361  017D  0021               	movlb	1	; select bank1
  2362  017E  100E               	bcf	14,0	;volatile
  2363                           
  2364                           ;user.c: 37: TRISCbits.TRISC1 = 0;
  2365  017F  108E               	bcf	14,1	;volatile
  2366                           
  2367                           ;user.c: 38: TRISCbits.TRISC2 = 0;
  2368  0180  110E               	bcf	14,2	;volatile
  2369                           
  2370                           ;user.c: 39: TRISCbits.TRISC3 = 0;
  2371  0181  118E               	bcf	14,3	;volatile
  2372                           
  2373                           ;user.c: 40: TRISCbits.TRISC4 = 0;
  2374  0182  120E               	bcf	14,4	;volatile
  2375                           
  2376                           ;user.c: 41: TRISCbits.TRISC5 = 0;
  2377  0183  128E               	bcf	14,5	;volatile
  2378                           
  2379                           ;user.c: 43: init_adc();
  2380  0184  21A4               	fcall	_init_adc
  2381  0185  0008               	return
  2382  0186                     __end_of_InitApp:	
  2383                           
  2384                           	psect	text9
  2385  01A4                     __ptext9:	
  2386 ;; *************** function _init_adc *****************
  2387 ;; Defined at:
  2388 ;;		line 55 in file "user.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1
  2402 ;;      Params:         0       0       0
  2403 ;;      Locals:         0       0       0
  2404 ;;      Temps:          0       0       0
  2405 ;;      Totals:         0       0       0
  2406 ;;Total ram usage:        0 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_InitApp
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _init_adc
  2418  01A4                     _init_adc:	
  2419                           
  2420                           ;user.c: 56: ADCON1bits.ADFM = 0b1;
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  2424  01A4  0021               	movlb	1	; select bank1
  2425  01A5  179E               	bsf	30,7	;volatile
  2426                           
  2427                           ;user.c: 57: ADCON1bits.ADCS = 0b110;
  2428  01A6  081E               	movf	30,w	;volatile
  2429  01A7  398F               	andlw	-113
  2430  01A8  3860               	iorlw	96
  2431  01A9  009E               	movwf	30	;volatile
  2432                           
  2433                           ;user.c: 58: ADCON1bits.ADPREF = 0b00;
  2434  01AA  30FC               	movlw	-4
  2435  01AB  059E               	andwf	30,f	;volatile
  2436                           
  2437                           ;user.c: 59: ADCON0bits.ADON = 0b1;
  2438  01AC  141D               	bsf	29,0	;volatile
  2439  01AD  0008               	return
  2440  01AE                     __end_of_init_adc:	
  2441                           
  2442                           	psect	text10
  2443  01C2                     __ptext10:	
  2444 ;; *************** function _ConfigureOscillator *****************
  2445 ;; Defined at:
  2446 ;;		line 17 in file "system.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1
  2460 ;;      Params:         0       0       0
  2461 ;;      Locals:         0       0       0
  2462 ;;      Temps:          0       0       0
  2463 ;;      Totals:         0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_main
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           
  2475                           ;psect for function _ConfigureOscillator
  2476  01C2                     _ConfigureOscillator:	
  2477                           
  2478                           ;system.c: 19: OSCCONbits.IRCF = 0b1111;
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  2482  01C2  3078               	movlw	120
  2483  01C3  0021               	movlb	1	; select bank1
  2484  01C4  0499               	iorwf	25,f	;volatile
  2485                           
  2486                           ;system.c: 20: OSCSTAT = 0x00;
  2487  01C5  019A               	clrf	26	;volatile
  2488  01C6  0008               	return
  2489  01C7                     __end_of_ConfigureOscillator:	
  2490                           
  2491                           	psect	intentry
  2492  0004                     __pintentry:	
  2493 ;; *************** function _isr *****************
  2494 ;; Defined at:
  2495 ;;		line 23 in file "interrupts.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1
  2509 ;;      Params:         0       0       0
  2510 ;;      Locals:         0       0       0
  2511 ;;      Temps:          1       0       0
  2512 ;;      Totals:         1       0       0
  2513 ;;Total ram usage:        1 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		Interrupt level 1
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522  0004                     _isr:	
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _isr: []
  2526  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2527  0005  3180               	pagesel	$
  2528  0006  0020               	movlb	0	; select bank0
  2529  0007  087F               	movf	127,w
  2530  0008  00F0               	movwf	??_isr
  2531  0009  0870               	movf	??_isr,w
  2532  000A  00FF               	movwf	127
  2533  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2534  000C  0009               	retfie
  2535  000D                     __end_of_isr:	
  2536  007E                     btemp	set	126	;btemp
  2537  007E                     int$flags	set	126
  2538  007E                     wtemp	set	126
  2539  007E                     wtemp0	set	126
  2540  0080                     wtemp1	set	128
  2541  0082                     wtemp2	set	130
  2542  0084                     wtemp3	set	132
  2543  0086                     wtemp4	set	134
  2544  0088                     wtemp5	set	136
  2545  007F                     wtemp6	set	127
  2546  007E                     ttemp	set	126
  2547  007E                     ttemp0	set	126
  2548  0081                     ttemp1	set	129
  2549  0084                     ttemp2	set	132
  2550  0087                     ttemp3	set	135
  2551  007F                     ttemp4	set	127
  2552  007E                     ltemp	set	126
  2553  007E                     ltemp0	set	126
  2554  0082                     ltemp1	set	130
  2555  0086                     ltemp2	set	134
  2556  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0      26
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_updateBoost
    _updateFuzz->_setFeedbackState
    _updateFuzz->_setFuzzState
    _updateBoost->_setBoostState

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     844
                _ConfigureOscillator
                            _InitApp
                          _initBoost
                           _initFuzz
                        _updateBoost
                         _updateFuzz
 ---------------------------------------------------------------------------------
 (1) _updateFuzz                                           3     1      2     562
                                              3 COMMON     3     1      2
                   _setFeedbackState
                       _setFuzzState
 ---------------------------------------------------------------------------------
 (2) _setFuzzState                                         2     0      2     216
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _setFeedbackState                                     2     0      2     216
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _updateBoost                                          4     2      2     282
                                              3 COMMON     4     2      2
                      _setBoostState
 ---------------------------------------------------------------------------------
 (2) _setBoostState                                        2     0      2     152
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initFuzz                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBoost                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc
   _initBoost
   _initFuzz
   _updateBoost
     _setBoostState
   _updateFuzz
     _setFeedbackState
     _setFuzzState

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      1A       6       32.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      27       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Aug 01 22:40:41 2016

                 __CFG_CP$OFF 0000                            l58 018A                   __CFG_LVP$ON 0000  
                         l149 0066                           l920 0051                           l940 0087  
                         l916 0041                           l870 0155                           l950 009A  
                         l960 00B7                           l948 0096                           l886 016F  
                         l990 010B                           l982 00F0                           l878 013B  
                         l992 010F                           l978 00E0                           u350 0153  
                         u505 00A4                           u425 003B                           u370 0139  
                         u435 004B                           u605 0119                           u390 016D  
                         u545 00DA                           u555 00EA                           u475 0070  
                         u580 0103                           u590 0104                           _isr 0004  
                __CFG_BORV$LO 0000                           wreg 0009                 _boost_pressed 0077  
                        ?_isr 0070                  __CFG_WRT$OFF 0000                          _main 0186  
                        fsr0h 0005                          fsr0l 0004                          indf0 0000  
                        btemp 007E                          ltemp 007E      __end_of_setFeedbackState 015B  
                        start 000D                          ttemp 007E                          wtemp 007E  
       __end_of_setBoostState 0175                 __CFG_MCLRE$ON 0000               __end_of_InitApp 0186  
                       ??_isr 0070                         ?_main 0070                 __CFG_WDTE$OFF 0000  
         _ConfigureOscillator 01C2                __CFG_BOREN$OFF 0000                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F          ?_ConfigureOscillator 0070               __initialization 000E  
                __end_of_main 0195                __CFG_LPBOR$OFF 0000                        ??_main 0077  
              _feedback_state 0028                        _ADRESH 009C                        _ADRESL 009B  
                      _PMADRH 0192                        _PMADRL 0191                        _PMDATH 0194  
                      _PMDATL 0193                        _PMCON2 0196                _debounce_limit 007B  
                   ??_InitApp 0071         ??_ConfigureOscillator 0071                __CFG_PWRTE$OFF 0000  
              __CFG_STVREN$ON 0000              __end_of_initFuzz 01A4              __end_of_init_adc 01AE  
                __pdataCOMMON 007B       __end_of__initialization 002C     updateBoost@debounce_limit 0073  
                ?_updateBoost 0073                __pcstackCOMMON 0070                  __pidataBANK0 01B6  
                  __pbssBANK0 0020            __size_of_initBoost 0008             ?_setFeedbackState 0071  
            _long_press_limit 0038                    __pmaintext 0186            ??_setFeedbackState 0073  
               ?_setFuzzState 0071                    __pintentry 0004      updateFuzz@debounce_limit 0073  
                     _OSCSTAT 009A                    _boost_down 0024                     ?_initFuzz 0070  
                   ?_init_adc 0070                       _InitApp 0175                ??_setFuzzState 0073  
                     __ptext1 002F                       __ptext2 0127                       __ptext3 0141  
                     __ptext4 00CE                       __ptext5 015B                       __ptext6 0195  
                     __ptext7 01AE                       __ptext8 0175                       __ptext9 01A4  
           __end_of_initBoost 01B6                     _T2CONbits 001C                  __size_of_isr 0009  
                     _fuzz_up 0036        __size_of_setBoostState 001A                       clrloop0 01BD  
         setFuzzState@f_state 0071          end_of_initialization 002C                    ??_initFuzz 0071  
                  ??_init_adc 0071                    _fuzz_state 002C          __size_of_updateBoost 0059  
                   _PORTAbits 000C              __CFG_FOSC$INTOSC 0000                     _TRISAbits 008C  
                   _TRISCbits 008E                    _updateFuzz 002F       setFeedbackState@f_state 0071  
 __end_of_ConfigureOscillator 01C7                 _setBoostState 015B                 __pidataCOMMON 01C7  
         start_initialization 000E                   __end_of_isr 000D          __end_of_setFuzzState 0141  
              ?_setBoostState 0071                   __pdataBANK0 0034          setBoostState@f_state 0071  
   __size_of_setFeedbackState 001A                   __pbssCOMMON 0077                     ___latbits 0000  
                 ?_updateFuzz 0073                      ?_InitApp 0070             __size_of_initFuzz 000F  
           __size_of_init_adc 000A                     _initBoost 01AE                      _LATAbits 010C  
             ??_setBoostState 0073                      _LATCbits 010E                     clear_ram0 01BC  
                   _fuzz_down 002A                      _PIR1bits 0011           __size_of_updateFuzz 009F  
                  _ADCON0bits 009D                    _ADCON1bits 009E         __size_of_setFuzzState 001A  
                 _boost_state 0026                    ?_initBoost 0070                 ??_updateBoost 0075  
            __size_of_InitApp 0011                  _setFuzzState 0127                    _ANSELAbits 018C  
            _setFeedbackState 0141                      __ptext10 01C2                      _boost_up 0034  
                _fuzz_pressed 0079                      _initFuzz 0195                      _init_adc 01A4  
               __size_of_main 000F  __size_of_ConfigureOscillator 0005                      int$flags 007E  
             _fuzz_turning_on 0030           __end_of_updateBoost 0127              _last_boost_state 0032  
                  _INTCONbits 000B                  ??_updateFuzz 0075                   ??_initBoost 0071  
                    intlevel1 0000                    _PMCON1bits 0195             __CFG_CLKOUTEN$OFF 0000  
                 _fuzz_toggle 002E                    _OSCCONbits 0099            __end_of_updateFuzz 00CE  
                wait_ms@timel 0020                   _updateBoost 00CE  
